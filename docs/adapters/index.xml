<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Adapters on WLDT</title><link>https://wldt.github.io/docs/adapters/</link><description>Recent content in Adapters on WLDT</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright (c) 2023 Hyas</copyright><lastBuildDate>Fri, 09 Feb 2024 12:55:37 +0100</lastBuildDate><atom:link href="https://wldt.github.io/docs/adapters/index.xml" rel="self" type="application/rss+xml"/><item><title>MQTT Physical Adapter</title><link>https://wldt.github.io/docs/adapters/mqtt-physical-adapter/</link><pubDate>Fri, 09 Feb 2024 12:55:52 +0100</pubDate><guid>https://wldt.github.io/docs/adapters/mqtt-physical-adapter/</guid><description>The MqttPhysicalAdapter library provides a streamlined solution for efficiently managing physical assets through the MQTT protocol. It offers a range of features, including a versatile builder for effortless configuration of MQTT connections, dedicated classes for handling both incoming and outgoing topics, and a specialized adapter designed for seamless integration with diverse physical assets.</description></item><item><title>MQTT Digital Adapter</title><link>https://wldt.github.io/docs/adapters/mqtt-digital-adapter/</link><pubDate>Fri, 09 Feb 2024 12:58:14 +0100</pubDate><guid>https://wldt.github.io/docs/adapters/mqtt-digital-adapter/</guid><description>The MqttDigitalAdapter,
MqttDigitalAdapterConfiguration, and MqttDigitalAdapterConfigurationBuilder classes and guides you through using these classes to set up an MQTT Digital Adapter within WLDT.</description></item><item><title>HTTP Digital Adapter</title><link>https://wldt.github.io/docs/adapters/http-digital-adapter/</link><pubDate>Fri, 09 Feb 2024 13:00:26 +0100</pubDate><guid>https://wldt.github.io/docs/adapters/http-digital-adapter/</guid><description>The HttpDigitalAdapter is a powerful component designed to facilitate the integration of Digital Twins into HTTP-based systems. It serves as a bridge between a Digital Twin and HTTP-based applications, allowing developers to easily expose and interact with Digital Twin data and functionalities over HTTP.</description></item></channel></rss>